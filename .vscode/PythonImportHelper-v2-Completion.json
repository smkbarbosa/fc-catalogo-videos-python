[
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "is_dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "unittest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "unittest",
        "description": "unittest",
        "detail": "unittest",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "isExtraImport": true,
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "category.domain.entities",
        "description": "category.domain.entities",
        "isExtraImport": true,
        "detail": "category.domain.entities",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220112307",
        "description": ".history.src.category.domain.entities_20230220112307",
        "peekOfCode": "class Category:\n    def __init__(self, name) -> None:\n        self.name = name",
        "detail": ".history.src.category.domain.entities_20230220112307",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113734",
        "description": ".history.src.category.domain.entities_20230220113734",
        "peekOfCode": "class Category:\n    def __init__(self, name, description, is_active, created_at) -> None:\n        self.name = name",
        "detail": ".history.src.category.domain.entities_20230220113734",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113738",
        "description": ".history.src.category.domain.entities_20230220113738",
        "peekOfCode": "class Category:\n    def __init__(self, name, description, is_active, created_at) -> None:\n        self.name = name",
        "detail": ".history.src.category.domain.entities_20230220113738",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113739",
        "description": ".history.src.category.domain.entities_20230220113739",
        "peekOfCode": "class Category:\n    def __init__(self, name, description, is_active, created_at) -> None:\n        self.name = name",
        "detail": ".history.src.category.domain.entities_20230220113739",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113744",
        "description": ".history.src.category.domain.entities_20230220113744",
        "peekOfCode": "class Category:\n    def __init__(self, name, description, is_active, created_at) -> None:\n        self.name = name\n# create -",
        "detail": ".history.src.category.domain.entities_20230220113744",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113804",
        "description": ".history.src.category.domain.entities_20230220113804",
        "peekOfCode": "class Category:\n    def __init__(self, name, description, is_active, created_at) -> None:\n        self.name = name\n        self.descr",
        "detail": ".history.src.category.domain.entities_20230220113804",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113816",
        "description": ".history.src.category.domain.entities_20230220113816",
        "peekOfCode": "class Category:\n    def __init__(self, name, description, is_active, created_at) -> None:\n        self.name = name\n        self.description = description\n        self.is_active =",
        "detail": ".history.src.category.domain.entities_20230220113816",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113821",
        "description": ".history.src.category.domain.entities_20230220113821",
        "peekOfCode": "class Category:\n    def __init__(self, name, description, is_active, created_at) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.",
        "detail": ".history.src.category.domain.entities_20230220113821",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113828",
        "description": ".history.src.category.domain.entities_20230220113828",
        "peekOfCode": "class Category:\n    def __init__(self, name, description, is_active, created_at) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220113828",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113837",
        "description": ".history.src.category.domain.entities_20230220113837",
        "peekOfCode": "class Category:\n    def __init__(self, name: str, description, is_active, created_at) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220113837",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113841",
        "description": ".history.src.category.domain.entities_20230220113841",
        "peekOfCode": "class Category:\n    def __init__(self, name: str, description: str, is_active, created_at) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220113841",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113844",
        "description": ".history.src.category.domain.entities_20230220113844",
        "peekOfCode": "class Category:\n    def __init__(self, name: str, description: str, is_active:bool , created_at) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220113844",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113848",
        "description": ".history.src.category.domain.entities_20230220113848",
        "peekOfCode": "class Category:\n    def __init__(self, name: str, description: str, is_active:bool, created_at) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220113848",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113851",
        "description": ".history.src.category.domain.entities_20230220113851",
        "peekOfCode": "class Category:\n    def __init__(self, name: str, description: str, is_active: bool, created_at) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220113851",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113856",
        "description": ".history.src.category.domain.entities_20230220113856",
        "peekOfCode": "class Category:\n    def __init__(self, name: str, description: str, is_active: bool, created_at: datetime) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220113856",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113906",
        "description": ".history.src.category.domain.entities_20230220113906",
        "peekOfCode": "class Category:\n    def __init__(self, name: str, description: str, is_active: bool, created_at: datetime) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220113906",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113912",
        "description": ".history.src.category.domain.entities_20230220113912",
        "peekOfCode": "class Category:\n    def __init__(self, name: str, description: str, is_active: bool, created_at: datetime) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220113912",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220113914",
        "description": ".history.src.category.domain.entities_20230220113914",
        "peekOfCode": "class Category:\n    def __init__(self, name: str, description: str, is_active: bool, created_at: datetime) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220113914",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220115612",
        "description": ".history.src.category.domain.entities_20230220115612",
        "peekOfCode": "class Category:\n    def __init__(self, name: str, description: str, is_active: bool, created_at: datetime) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220115612",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134229",
        "description": ".history.src.category.domain.entities_20230220134229",
        "peekOfCode": "class Category:\n    def __init__(self, name: str, description: str, is_active: bool, created_at: datetime) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220134229",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134236",
        "description": ".history.src.category.domain.entities_20230220134236",
        "peekOfCode": "class Category:\n    name: str\n    def __init__(self, name: str, description: str, is_active: bool, created_at: datetime) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220134236",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134242",
        "description": ".history.src.category.domain.entities_20230220134242",
        "peekOfCode": "class Category:\n    name: str\n    description: str\n    def __init__(self, name: str, description: str, is_active: bool, created_at: datetime) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220134242",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134247",
        "description": ".history.src.category.domain.entities_20230220134247",
        "peekOfCode": "class Category:\n    name: str\n    description: str\n    is_active: bool\n    def __init__(self, name: str, description: str, is_active: bool, created_at: datetime) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220134247",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134250",
        "description": ".history.src.category.domain.entities_20230220134250",
        "peekOfCode": "class Category:\n    name: str\n    description: str\n    is_active: bool\n    create\n    def __init__(self, name: str, description: str, is_active: bool, created_at: datetime) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220134250",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134253",
        "description": ".history.src.category.domain.entities_20230220134253",
        "peekOfCode": "class Category:\n    name: str\n    description: str\n    is_active: bool\n    created_at: datetime\n    def __init__(self, name: str, description: str, is_active: bool, created_at: datetime) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220134253",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134512",
        "description": ".history.src.category.domain.entities_20230220134512",
        "peekOfCode": "class Category:\n    name: str\n    description: str\n    is_active: bool\n    created_at: datetime\n    def __init__(self, name: str, description: str, is_active: bool, created_at: datetime) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220134512",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134516",
        "description": ".history.src.category.domain.entities_20230220134516",
        "peekOfCode": "class Category:\n    name: str\n    description: str\n    is_active: bool\n    created_at: datetime\n    def __init__(self, name: str, description: str, is_active: bool, created_at: datetime) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220134516",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134518",
        "description": ".history.src.category.domain.entities_20230220134518",
        "peekOfCode": "class Category:\n    name: str\n    description: str\n    is_active: bool\n    created_at: datetime\n    def __init__(self, name: str, description: str, is_active: bool, created_at: datetime) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220134518",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134531",
        "description": ".history.src.category.domain.entities_20230220134531",
        "peekOfCode": "class Category:\n    name: str\n    description: str\n    is_active: bool\n    created_at: datetime\n    def __init__(self, name: str, description: str, is_active: bool, created_at: datetime) -> None:\n        self.name = name\n        self.description = description\n        self.is_active = is_active\n        self.created_at = created_at",
        "detail": ".history.src.category.domain.entities_20230220134531",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134539",
        "description": ".history.src.category.domain.entities_20230220134539",
        "peekOfCode": "class Category:\n    name: str\n    description: str\n    is_active: bool\n    created_at: datetime",
        "detail": ".history.src.category.domain.entities_20230220134539",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134541",
        "description": ".history.src.category.domain.entities_20230220134541",
        "peekOfCode": "class Category:\n    name: str\n    description: str\n    is_active: bool\n    created_at: datetime",
        "detail": ".history.src.category.domain.entities_20230220134541",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134645",
        "description": ".history.src.category.domain.entities_20230220134645",
        "peekOfCode": "class Category:\n    name: str\n    description: str\n    is_active: bool\n    created_at: datetime",
        "detail": ".history.src.category.domain.entities_20230220134645",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134648",
        "description": ".history.src.category.domain.entities_20230220134648",
        "peekOfCode": "class Category:\n    name: str\n    description: str\n    is_active: bool\n    created_at: datetime",
        "detail": ".history.src.category.domain.entities_20230220134648",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134649",
        "description": ".history.src.category.domain.entities_20230220134649",
        "peekOfCode": "class Category:\n    name: str\n    description: str\n    is_active: bool\n    created_at: datetime",
        "detail": ".history.src.category.domain.entities_20230220134649",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134707",
        "description": ".history.src.category.domain.entities_20230220134707",
        "peekOfCode": "class Category:\n    name: str\n    description: str\n    is_active: bool\n    created_at: datetime",
        "detail": ".history.src.category.domain.entities_20230220134707",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134842",
        "description": ".history.src.category.domain.entities_20230220134842",
        "peekOfCode": "class Category:\n    name: str\n    description: str = no\n    is_active: bool\n    created_at: datetime",
        "detail": ".history.src.category.domain.entities_20230220134842",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134845",
        "description": ".history.src.category.domain.entities_20230220134845",
        "peekOfCode": "class Category:\n    name: str\n    description: str = None\n    is_active: bool\n    created_at: datetime",
        "detail": ".history.src.category.domain.entities_20230220134845",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134849",
        "description": ".history.src.category.domain.entities_20230220134849",
        "peekOfCode": "class Category:\n    name: str\n    description: str = None\n    is_active: bool = True\n    created_at: datetime",
        "detail": ".history.src.category.domain.entities_20230220134849",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134855",
        "description": ".history.src.category.domain.entities_20230220134855",
        "peekOfCode": "class Category:\n    name: str\n    description: str = None\n    is_active: bool = True\n    created_at: datetime = datetime.now()",
        "detail": ".history.src.category.domain.entities_20230220134855",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134912",
        "description": ".history.src.category.domain.entities_20230220134912",
        "peekOfCode": "class Category:\n    name: str\n    description: Optionalstr = None\n    is_active: bool = True\n    created_at: datetime = datetime.now()",
        "detail": ".history.src.category.domain.entities_20230220134912",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134914",
        "description": ".history.src.category.domain.entities_20230220134914",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str = None\n    is_active: bool = True\n    created_at: datetime = datetime.now()",
        "detail": ".history.src.category.domain.entities_20230220134914",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134916",
        "description": ".history.src.category.domain.entities_20230220134916",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: bool = True\n    created_at: datetime = datetime.now()",
        "detail": ".history.src.category.domain.entities_20230220134916",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134928",
        "description": ".history.src.category.domain.entities_20230220134928",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: bool = True\n    created_at: datetime = datetime.now()",
        "detail": ".history.src.category.domain.entities_20230220134928",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134941",
        "description": ".history.src.category.domain.entities_20230220134941",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optionalbool = True\n    created_at: datetime = datetime.now()",
        "detail": ".history.src.category.domain.entities_20230220134941",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134943",
        "description": ".history.src.category.domain.entities_20230220134943",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool = True\n    created_at: datetime = datetime.now()",
        "detail": ".history.src.category.domain.entities_20230220134943",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134946",
        "description": ".history.src.category.domain.entities_20230220134946",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: datetime = datetime.now()",
        "detail": ".history.src.category.domain.entities_20230220134946",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134951",
        "description": ".history.src.category.domain.entities_20230220134951",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optidatetime = datetime.now()",
        "detail": ".history.src.category.domain.entities_20230220134951",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134952",
        "description": ".history.src.category.domain.entities_20230220134952",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optionaldatetime = datetime.now()",
        "detail": ".history.src.category.domain.entities_20230220134952",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134954",
        "description": ".history.src.category.domain.entities_20230220134954",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime = datetime.now()",
        "detail": ".history.src.category.domain.entities_20230220134954",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220134957",
        "description": ".history.src.category.domain.entities_20230220134957",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = datetime.now()",
        "detail": ".history.src.category.domain.entities_20230220134957",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220135111",
        "description": ".history.src.category.domain.entities_20230220135111",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = fielddatetime.now()",
        "detail": ".history.src.category.domain.entities_20230220135111",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220135115",
        "description": ".history.src.category.domain.entities_20230220135115",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factorydatetime.now()",
        "detail": ".history.src.category.domain.entities_20230220135115",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220135119",
        "description": ".history.src.category.domain.entities_20230220135119",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factory=lambda: datetime.now()",
        "detail": ".history.src.category.domain.entities_20230220135119",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220135122",
        "description": ".history.src.category.domain.entities_20230220135122",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factory=lambda: datetime.now())",
        "detail": ".history.src.category.domain.entities_20230220135122",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220135129",
        "description": ".history.src.category.domain.entities_20230220135129",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factory=lambda: datetime.now())",
        "detail": ".history.src.category.domain.entities_20230220135129",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220141849",
        "description": ".history.src.category.domain.entities_20230220141849",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factory=lambda: datetime.now())\n    #",
        "detail": ".history.src.category.domain.entities_20230220141849",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220141854",
        "description": ".history.src.category.domain.entities_20230220141854",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factory=lambda: datetime.now())\n    # Piramide de testes",
        "detail": ".history.src.category.domain.entities_20230220141854",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220141856",
        "description": ".history.src.category.domain.entities_20230220141856",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factory=lambda: datetime.now())\n    # Piramide de testes\n    # -",
        "detail": ".history.src.category.domain.entities_20230220141856",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220141859",
        "description": ".history.src.category.domain.entities_20230220141859",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factory=lambda: datetime.now())\n    # Piramide de testes\n    # - Unidade",
        "detail": ".history.src.category.domain.entities_20230220141859",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220141901",
        "description": ".history.src.category.domain.entities_20230220141901",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factory=lambda: datetime.now())\n    # Piramide de testes\n    # - Unidade\n    # -",
        "detail": ".history.src.category.domain.entities_20230220141901",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220141905",
        "description": ".history.src.category.domain.entities_20230220141905",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factory=lambda: datetime.now())\n    # Piramide de testes\n    # - Unidade\n    # - Integração",
        "detail": ".history.src.category.domain.entities_20230220141905",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220141909",
        "description": ".history.src.category.domain.entities_20230220141909",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factory=lambda: datetime.now())\n    # Piramide de testes\n    # - Unidade\n    # - Integração\n    -$ç",
        "detail": ".history.src.category.domain.entities_20230220141909",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220141922",
        "description": ".history.src.category.domain.entities_20230220141922",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factory=lambda: datetime.now())\n    # Piramide de testes\n    # - Unidade\n    # - Integração",
        "detail": ".history.src.category.domain.entities_20230220141922",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220141924",
        "description": ".history.src.category.domain.entities_20230220141924",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factory=lambda: datetime.now())\n    # Piramide de testes\n    # - Unidade\n    # - Integração\n    # -",
        "detail": ".history.src.category.domain.entities_20230220141924",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220141958",
        "description": ".history.src.category.domain.entities_20230220141958",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factory=lambda: datetime.now())\n    # Piramide de testes\n    # - Unidade\n    # - Integração\n    # -b2",
        "detail": ".history.src.category.domain.entities_20230220141958",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220142001",
        "description": ".history.src.category.domain.entities_20230220142001",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factory=lambda: datetime.now())\n    # Piramide de testes\n    # - Unidade\n    # - Integração\n    # -e2e",
        "detail": ".history.src.category.domain.entities_20230220142001",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.domain.entities_20230220142003",
        "description": ".history.src.category.domain.entities_20230220142003",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factory=lambda: datetime.now())\n    # Piramide de testes\n    # - Unidade\n    # - Integração\n    # - e2e",
        "detail": ".history.src.category.domain.entities_20230220142003",
        "documentation": {}
    },
    {
        "label": "Tes",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.__init___20230220114600",
        "description": ".history.src.category.tests.domain.__init___20230220114600",
        "peekOfCode": "class Test",
        "detail": ".history.src.category.tests.domain.__init___20230220114600",
        "documentation": {}
    },
    {
        "label": "TestCategor",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.__init___20230220114603",
        "description": ".history.src.category.tests.domain.__init___20230220114603",
        "peekOfCode": "class TestCategory",
        "detail": ".history.src.category.tests.domain.__init___20230220114603",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.__init___20230220114605",
        "description": ".history.src.category.tests.domain.__init___20230220114605",
        "peekOfCode": "class TestCategory()",
        "detail": ".history.src.category.tests.domain.__init___20230220114605",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.__init___20230220114611",
        "description": ".history.src.category.tests.domain.__init___20230220114611",
        "peekOfCode": "class TestCategory(unit)",
        "detail": ".history.src.category.tests.domain.__init___20230220114611",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.__init___20230220114612",
        "description": ".history.src.category.tests.domain.__init___20230220114612",
        "peekOfCode": "class TestCategory(unitT)",
        "detail": ".history.src.category.tests.domain.__init___20230220114612",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.__init___20230220114615",
        "description": ".history.src.category.tests.domain.__init___20230220114615",
        "peekOfCode": "class TestCategory(unittest.)",
        "detail": ".history.src.category.tests.domain.__init___20230220114615",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.__init___20230220114619",
        "description": ".history.src.category.tests.domain.__init___20230220114619",
        "peekOfCode": "class TestCategory(unittest.TestCase)",
        "detail": ".history.src.category.tests.domain.__init___20230220114619",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.__init___20230220114621",
        "description": ".history.src.category.tests.domain.__init___20230220114621",
        "peekOfCode": "class TestCategory(unittest.TestCase):",
        "detail": ".history.src.category.tests.domain.__init___20230220114621",
        "documentation": {}
    },
    {
        "label": "Tes",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220114848",
        "description": ".history.src.category.tests.domain.test_entities_20230220114848",
        "peekOfCode": "class Test",
        "detail": ".history.src.category.tests.domain.test_entities_20230220114848",
        "documentation": {}
    },
    {
        "label": "TestCate",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220114851",
        "description": ".history.src.category.tests.domain.test_entities_20230220114851",
        "peekOfCode": "class TestCateg",
        "detail": ".history.src.category.tests.domain.test_entities_20230220114851",
        "documentation": {}
    },
    {
        "label": "TestCategor",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220114853",
        "description": ".history.src.category.tests.domain.test_entities_20230220114853",
        "peekOfCode": "class TestCategory",
        "detail": ".history.src.category.tests.domain.test_entities_20230220114853",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220114902",
        "description": ".history.src.category.tests.domain.test_entities_20230220114902",
        "peekOfCode": "class TestCategory(unittest.)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220114902",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220114903",
        "description": ".history.src.category.tests.domain.test_entities_20230220114903",
        "peekOfCode": "class TestCategory(unittest.T)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220114903",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220114905",
        "description": ".history.src.category.tests.domain.test_entities_20230220114905",
        "peekOfCode": "class TestCategory(unittest.Tes)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220114905",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220114907",
        "description": ".history.src.category.tests.domain.test_entities_20230220114907",
        "peekOfCode": "class TestCategory(unittest.Testcase)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220114907",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220114912",
        "description": ".history.src.category.tests.domain.test_entities_20230220114912",
        "peekOfCode": "class TestCategory(unittest.TestCase)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220114912",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220114915",
        "description": ".history.src.category.tests.domain.test_entities_20230220114915",
        "peekOfCode": "class TestCategory(unittest.TestCase):",
        "detail": ".history.src.category.tests.domain.test_entities_20230220114915",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220114928",
        "description": ".history.src.category.tests.domain.test_entities_20230220114928",
        "peekOfCode": "class TestCategory(unittest.TestCase):",
        "detail": ".history.src.category.tests.domain.test_entities_20230220114928",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220114931",
        "description": ".history.src.category.tests.domain.test_entities_20230220114931",
        "peekOfCode": "class TestCategory(unittest.TestCase):",
        "detail": ".history.src.category.tests.domain.test_entities_20230220114931",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220114934",
        "description": ".history.src.category.tests.domain.test_entities_20230220114934",
        "peekOfCode": "class TestCategory(unittest.TestCase):",
        "detail": ".history.src.category.tests.domain.test_entities_20230220114934",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220114943",
        "description": ".history.src.category.tests.domain.test_entities_20230220114943",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor",
        "detail": ".history.src.category.tests.domain.test_entities_20230220114943",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220114946",
        "description": ".history.src.category.tests.domain.test_entities_20230220114946",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220114946",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220114949",
        "description": ".history.src.category.tests.domain.test_entities_20230220114949",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        Category",
        "detail": ".history.src.category.tests.domain.test_entities_20230220114949",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115011",
        "description": ".history.src.category.tests.domain.test_entities_20230220115011",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        Category",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115011",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115047",
        "description": ".history.src.category.tests.domain.test_entities_20230220115047",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        Category('Movie')",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115047",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115053",
        "description": ".history.src.category.tests.domain.test_entities_20230220115053",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        Category('Movie', 'some description', )",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115053",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115058",
        "description": ".history.src.category.tests.domain.test_entities_20230220115058",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        Category('Movie', 'some description', True, datetime.)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115058",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115100",
        "description": ".history.src.category.tests.domain.test_entities_20230220115100",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        Category('Movie', 'some description', True, datetime.now())",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115100",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115105",
        "description": ".history.src.category.tests.domain.test_entities_20230220115105",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        Category('Movie', 'some description', True, datetime.now())",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115105",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115111",
        "description": ".history.src.category.tests.domain.test_entities_20230220115111",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        Category('Movie', 'some description', True, datetime.now())\n        assert",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115111",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115117",
        "description": ".history.src.category.tests.domain.test_entities_20230220115117",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        Category('Movie', 'some description', True, datetime.now())\n        self.assser",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115117",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115120",
        "description": ".history.src.category.tests.domain.test_entities_20230220115120",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115120",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115124",
        "description": ".history.src.category.tests.domain.test_entities_20230220115124",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115124",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115126",
        "description": ".history.src.category.tests.domain.test_entities_20230220115126",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115126",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115129",
        "description": ".history.src.category.tests.domain.test_entities_20230220115129",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115129",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115134",
        "description": ".history.src.category.tests.domain.test_entities_20230220115134",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115134",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115208",
        "description": ".history.src.category.tests.domain.test_entities_20230220115208",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    dpyest_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115208",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115209",
        "description": ".history.src.category.tests.domain.test_entities_20230220115209",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115209",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115311",
        "description": ".history.src.category.tests.domain.test_entities_20230220115311",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115311",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115324",
        "description": ".history.src.category.tests.domain.test_entities_20230220115324",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115324",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115329",
        "description": ".history.src.category.tests.domain.test_entities_20230220115329",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.asserEqual()",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115329",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115332",
        "description": ".history.src.category.tests.domain.test_entities_20230220115332",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.asserEqual(category)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115332",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115336",
        "description": ".history.src.category.tests.domain.test_entities_20230220115336",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.asserEqual(category.name)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115336",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115340",
        "description": ".history.src.category.tests.domain.test_entities_20230220115340",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.asserEqual(category.description)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115340",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115344",
        "description": ".history.src.category.tests.domain.test_entities_20230220115344",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.asserEqual(category.description, 'some description')",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115344",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115349",
        "description": ".history.src.category.tests.domain.test_entities_20230220115349",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.asserEqual(category.description, 'some description')\n        self.asser",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115349",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115352",
        "description": ".history.src.category.tests.domain.test_entities_20230220115352",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.asserEqual(category.description, 'some description')\n        self.assertEqual()",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115352",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115354",
        "description": ".history.src.category.tests.domain.test_entities_20230220115354",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.asserEqual(category.description, 'some description')\n        self.assertEqual(categor)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115354",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115357",
        "description": ".history.src.category.tests.domain.test_entities_20230220115357",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.asserEqual(category.description, 'some description')\n        self.assertEqual(category.)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115357",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115359",
        "description": ".history.src.category.tests.domain.test_entities_20230220115359",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.asserEqual(category.description, 'some description')\n        self.assertEqual(category.is_active)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115359",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115403",
        "description": ".history.src.category.tests.domain.test_entities_20230220115403",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.asserEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115403",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115413",
        "description": ".history.src.category.tests.domain.test_entities_20230220115413",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.asserEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance()",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115413",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115415",
        "description": ".history.src.category.tests.domain.test_entities_20230220115415",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.asserEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(datetime)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115415",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115427",
        "description": ".history.src.category.tests.domain.test_entities_20230220115427",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(datetime)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115427",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115437",
        "description": ".history.src.category.tests.domain.test_entities_20230220115437",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(categorydatetime)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115437",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.domain.test_entities_20230220115440",
        "description": ".history.src.category.tests.domain.test_entities_20230220115440",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)",
        "detail": ".history.src.category.tests.domain.test_entities_20230220115440",
        "documentation": {}
    },
    {
        "label": "TestCategory",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220115439",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220115439",
        "peekOfCode": "class TestCategory(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220115439",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220142846",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220142846",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220142846",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143245",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143245",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    #\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143245",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143248",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143248",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143248",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143253",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143253",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    # Act\n    #\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143253",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143255",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143255",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    # Act\n    # Assert\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143255",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143301",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143301",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    data = \n    # Act\n    # Assert\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143301",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143303",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143303",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    data = {}\n    # Act\n    # Assert\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143303",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143314",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143314",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    data = {'Movie', 'some description', True, datetime.now()}\n    # Act\n    # Assert\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143314",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143318",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143318",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    data = {name: 'Movie', 'some description', True, datetime.now()}\n    # Act\n    # Assert\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143318",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143322",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143322",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    data = {name: 'Movie',  ''some description', True, datetime.now()}\n    # Act\n    # Assert\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143322",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143323",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143323",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    data = {name: 'Movie',  'some description', True, datetime.now()}\n    # Act\n    # Assert\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143323",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143328",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143328",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    data = {'name: 'Movie',  'some description', True, datetime.now()}\n    # Act\n    # Assert\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143328",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143331",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143331",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    data = {'name': 'Movie',  'some description', True, datetime.now()}\n    # Act\n    # Assert\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143331",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143336",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143336",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    data = {'name': 'Movie', description:  'some description', True, datetime.now()}\n    # Act\n    # Assert\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143336",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143340",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143340",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    data = {'name': 'Movie', 'description':  'some description', True, datetime.now()}\n    # Act\n    # Assert\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143340",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143346",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143346",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    data = {'name': 'Movie', \n    'description':  'some description', True, datetime.now()}\n    # Act\n    # Assert\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143346",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143348",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143348",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    data = {\n        'name': 'Movie', \n    'description':  'some description', True, datetime.now()}\n    # Act\n    # Assert\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143348",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143351",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143351",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    data = {\n        'name': 'Movie', \n        'description':  'some description', True, datetime.now()}\n    # Act\n    # Assert\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143351",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143357",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143357",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    # Arrange\n    data = {\n        'name': 'Movie', \n        'description':  'some description', \n        '': True, datetime.now()}\n    # Act\n    # Assert\n    def test_constructor(self):",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143357",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143408",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143408",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    #triple AAA\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143408",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143410",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143410",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category('Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143410",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143417",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143417",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category(\n            'Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143417",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143420",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143420",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category(\n            name='Movie', 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143420",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143422",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143422",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category(\n            name='Movie', descr'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143422",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143426",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143426",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category(\n            name='Movie', description'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143426",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143427",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143427",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category(\n            name='Movie', description:'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143427",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143429",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143429",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category(\n            name='Movie', description= 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143429",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143430",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143430",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category(\n            name='Movie', description = 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143430",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143436",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143436",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143436",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143443",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143443",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active: True, datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143443",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143446",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143446",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active: True, \n            datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143446",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143500",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143500",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active: True, \n            created_atdatetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143500",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143502",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143502",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active: True, \n            created_at= datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143502",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143503",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143503",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active= True, \n            created_at= datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143503",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143504",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143504",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active= True, \n            created_at = datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143504",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143506",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143506",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active = True, \n            created_at = datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143506",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143702",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143702",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active = True, \n            created_at = datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143702",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143709",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143709",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self)\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active = True, \n            created_at = datetime.now())\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143709",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143712",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143712",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        pass\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active = True, \n            created_at = datetime.now())\n        self.assertEqual(category.name, 'Movie')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143712",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143728",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143728",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        pass\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active = True, \n            created_at = datetime.now())\n        self.assertEqual(category.name, 'Movie')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143728",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143731",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143731",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        pass\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active = True, \n            created_at = datetime.now())\n        self.assertEqual(category.name, 'Movie')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143731",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143734",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143734",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        pass\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active = True, \n            created_at = datetime.now())\n        self.assertEqual(category.name, 'Movie')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143734",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143739",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143739",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        pass\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active = True, \n            created_at = datetime.now())\n        self.assertEqual(category.name, 'Movie')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143739",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143749",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143749",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active = True, \n            created_at = datetime.now())\n        self.assertEqual(category.name, 'Movie')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143749",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143752",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143752",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active = True, \n            created_at = datetime.now())\n        self.assertEqual(category.name, 'Movie')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143752",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143755",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143755",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass)\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active = True, \n            created_at = datetime.now())\n        self.assertEqual(category.name, 'Movie')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143755",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143801",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143801",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active = True, \n            created_at = datetime.now())\n        self.assertEqual(category.name, 'Movie')",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220143801",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145139",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145139",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = \n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active = True, \n            created_at = datetime.now())",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145139",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145143",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145143",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Ca\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active = True, \n            created_at = datetime.now())",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145143",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145146",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145146",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active = True, \n            created_at = datetime.now())",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145146",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145153",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145153",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        category = Category(\n            name='Movie', \n            description = 'some description', \n            is_active = True, \n            created_at = datetime.now())",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145153",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145156",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145156",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        # category = Category(\n        #     name='Movie', \n        #     description = 'some description', \n        #     is_active = True, \n        #     created_at = datetime.now())",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145156",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145206",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145206",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        # category = Category(\n        #     name='Movie', \n        #     description = 'some description', \n        #     is_active = True, \n        #     created_at = datetime.now())",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145206",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145208",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145208",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        # category = Category(",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145208",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145215",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145215",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        # category = Category(",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145215",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145247",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145247",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        # category = Category(",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145247",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145301",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145301",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, 'some description')\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        # category = Category(",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145301",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145629",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145629",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        # category = Category(",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145629",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145718",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145718",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145718",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145723",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145723",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145723",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145736",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145736",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145736",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145747",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145747",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145747",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145751",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145751",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145751",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145755",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145755",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145755",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145759",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145759",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145759",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145804",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145804",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145804",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145809",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145809",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145809",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145814",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145814",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145814",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145923",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145923",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145923",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145927",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145927",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145927",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145933",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145933",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145933",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145949",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145949",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145949",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145958",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145958",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220145958",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150021",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150021",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150021",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150041",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150041",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150041",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150048",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150048",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150048",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150049",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150049",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150049",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150052",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150052",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150052",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150053",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150053",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150053",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150057",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150057",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150057",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150058",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150058",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150058",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150101",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150101",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150101",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150104",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150104",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150104",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150108",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150108",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150108",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150109",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150109",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150109",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150111",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150111",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150111",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150115",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150115",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150115",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150121",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150121",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150121",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150128",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150128",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150128",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150444",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150444",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150444",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150448",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150448",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150448",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150452",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150452",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150452",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150457",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150457",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150457",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150502",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150502",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150502",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150505",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150505",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150505",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150518",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150518",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150518",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150523",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150523",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150523",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150529",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150529",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150529",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150537",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150537",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150537",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150539",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150539",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150539",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150556",
        "description": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150556",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": ".history.src.category.tests.unit.domain.test_unit_entities_20230220150556",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.entities_20230220111714",
        "description": ".history.src.category.entities_20230220111714",
        "peekOfCode": "class Category:",
        "detail": ".history.src.category.entities_20230220111714",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.entities_20230220111719",
        "description": ".history.src.category.entities_20230220111719",
        "peekOfCode": "class Category:\n    def __init__",
        "detail": ".history.src.category.entities_20230220111719",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.entities_20230220111721",
        "description": ".history.src.category.entities_20230220111721",
        "peekOfCode": "class Category:\n    def __init__(sef)",
        "detail": ".history.src.category.entities_20230220111721",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.entities_20230220111724",
        "description": ".history.src.category.entities_20230220111724",
        "peekOfCode": "class Category:\n    def __init__(self, name)",
        "detail": ".history.src.category.entities_20230220111724",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.entities_20230220111727",
        "description": ".history.src.category.entities_20230220111727",
        "peekOfCode": "class Category:\n    def __init__(self, name) ->",
        "detail": ".history.src.category.entities_20230220111727",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.entities_20230220111729",
        "description": ".history.src.category.entities_20230220111729",
        "peekOfCode": "class Category:\n    def __init__(self, name) -> None:",
        "detail": ".history.src.category.entities_20230220111729",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.entities_20230220111733",
        "description": ".history.src.category.entities_20230220111733",
        "peekOfCode": "class Category:\n    def __init__(self, name) -> None:\n        self.name = name",
        "detail": ".history.src.category.entities_20230220111733",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.entities_20230220111742",
        "description": ".history.src.category.entities_20230220111742",
        "peekOfCode": "class Category:\n    def __init__(self, name) -> None:\n        self.name = name",
        "detail": ".history.src.category.entities_20230220111742",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.entities_20230220111828",
        "description": ".history.src.category.entities_20230220111828",
        "peekOfCode": "class Category:\n    def __init__(self, name) -> None:\n        self.name = name",
        "detail": ".history.src.category.entities_20230220111828",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.entities_20230220111831",
        "description": ".history.src.category.entities_20230220111831",
        "peekOfCode": "class Category:\n    def __init__(self, name) -> None:\n        self.name = name\nprint",
        "detail": ".history.src.category.entities_20230220111831",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.entities_20230220111837",
        "description": ".history.src.category.entities_20230220111837",
        "peekOfCode": "class Category:\n    def __init__(self, name) -> None:\n        self.name = name\nprint(vars(Category))",
        "detail": ".history.src.category.entities_20230220111837",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.entities_20230220111839",
        "description": ".history.src.category.entities_20230220111839",
        "peekOfCode": "class Category:\n    def __init__(self, name) -> None:\n        self.name = name\nprint(vars(Category('')))",
        "detail": ".history.src.category.entities_20230220111839",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.entities_20230220111841",
        "description": ".history.src.category.entities_20230220111841",
        "peekOfCode": "class Category:\n    def __init__(self, name) -> None:\n        self.name = name\nprint(vars(Category('Movie')))",
        "detail": ".history.src.category.entities_20230220111841",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": ".history.src.category.entities_20230220112308",
        "description": ".history.src.category.entities_20230220112308",
        "peekOfCode": "class Category:\n    def __init__(self, name) -> None:\n        self.name = name",
        "detail": ".history.src.category.entities_20230220112308",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "src.category.domain.entities",
        "description": "src.category.domain.entities",
        "peekOfCode": "class Category:\n    name: str\n    description: Optional[str] = None\n    is_active: Optional[bool] = True\n    created_at: Optional[datetime] = field(default_factory=lambda: datetime.now())\n    # Piramide de testes\n    # - Unidade\n    # - Integração\n    # - e2e",
        "detail": "src.category.domain.entities",
        "documentation": {}
    },
    {
        "label": "TestCategoryUnit",
        "kind": 6,
        "importPath": "src.category.tests.unit.domain.test_unit_entities",
        "description": "src.category.tests.unit.domain.test_unit_entities",
        "peekOfCode": "class TestCategoryUnit(unittest.TestCase):\n    def test_if_is_a_dataclass(self):\n        self.assertTrue(is_dataclass(Category))\n    def test_constructor(self):\n        category = Category(name='Movie')\n        self.assertEqual(category.name, 'Movie')\n        self.assertEqual(category.description, None)\n        self.assertEqual(category.is_active, True)\n        self.assertIsInstance(category.created_at, datetime)\n        created_at = datetime.now()",
        "detail": "src.category.tests.unit.domain.test_unit_entities",
        "documentation": {}
    }
]